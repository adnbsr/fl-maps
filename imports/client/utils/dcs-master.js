const e={};let t;e.getWindowName=(()=>t),e.setWindowName=(o=>{e.throwIf(o&&o.length>15,"Window name is limited to 15 characters"),t=o}),e.log=((...e)=>{t&&(e=[`%c${t.padEnd(15," ")} -`,"color:grey",...e]),console.log(...e)}),e.logIndent=((...e)=>{console.log("  ",...e)}),e.logAlign=((...e)=>{t&&(e=["                 ",...e]),console.log(...e)});class o extends Error{constructor(e){super(e),this.name="DocussError"}}e.throwIf=((e,n)=>{if(e)throw t&&(n=`${t} - ${n}`),new o(n)}),e.throwIfNot=((t,o)=>e.throwIf(!t,o)),e.dev={assert:(t,o)=>e.throwIfNot(t,`Assertion Failed${o?" - "+o:""}`),log:e.log,logIndent:e.logIndent,logAlign:e.logAlign};class n{constructor(e){this.name=e,this.silent=!1,this.dev={log:this.log.bind(this),logIndent:this.logIndent.bind(this),logAlign:this.logAlign.bind(this)}}log(...t){this.silent||(this.name&&(t=[`${this.name} -`,...t]),e.log(...t))}logIndent(...t){this.silent||e.logIndent(...t)}logAlign(...t){this.silent||(this.name&&(t=[" ".repeat(this.name.length+2),...t]),e.logAlign(...t))}}e.logger=(e=>new n(e)),e.pick=((e,t)=>e?t.reduce((t,o)=>(e.hasOwnProperty(o)&&(t[o]=e[o]),t),{}):e),e.omit=((e,t)=>e?Object.keys(e).reduce((o,n)=>(t.includes(n)||(o[n]=e[n]),o),{}):e),e.async={delay:e=>new Promise(t=>setTimeout(t,e)),retry:(t,o,n)=>0===o?Promise.reject(n):Promise.resolve(t(n,o)).then(n=>n||e.async.retry(t,o-1,n)),retryDelay(t,o,n,s){const i=o=>e.async.delay(n).then(()=>t(o));return 0===o?Promise.reject(s):Promise.resolve(t(o)).then(t=>t||e.async.retryDelay(i,o-1))},find:(t,o,n=null)=>t&&0!==t.length?Promise.resolve(o(t[0])).then(s=>s?t[0]:e.async.find(t.slice(1),o,n)):Promise.resolve(void 0)};const s={onDOMReady:()=>new Promise(e=>{"loading"!==document.readyState?e():document.addEventListener("DOMContentLoaded",e)}),forEach:function(e,t,o){o=o||window;for(let n=0;n<e.length;n++)t.call(o,e[n],n)},wrapAll:function(e,t){if(e&&e.length){const o=Array.prototype.slice.call(e);o[0].parentNode.insertBefore(t,o[0]),o.forEach(e=>t.appendChild(e))}},elementFromHtml:function(e){const t=document.createElement("div");return t.innerHTML=e.trim(),t.firstChild},inIFrame:()=>{try{return window.self!==window.top}catch(e){return!0}},ajax:function(e,t,o){return new Promise((n,s)=>{var i=new XMLHttpRequest;i.open(e,t,!0),i.setRequestHeader("Content-Type","application/json"),i.onreadystatechange=function(){4===i.readyState&&(200===i.status?n(JSON.parse(i.responseText)):(0!==i.status||i.statusText||s("Cross-domain call failed (see the error message above)"),s({status:i.status,statusText:i.statusText})))},i.send(o?JSON.stringify(o):null)})}},i=null;let r,a=[];class l{constructor({remoteWindow:t,remoteName:o,remoteOrigin:n,timeout:r=1e4,onTimeout:l,logger:c=i}){e.throwIfNot(e.getWindowName(),"RemoteWindow needs a window name. Did you forget to call u.setWindowName()?"),this.remoteWindow=t,this.remoteName=o,this.remoteOrigin=n,this.logger=c,this.onConnectedHandlers=[],this.onConnectedPriority=!1,this.connected=!1,this.pending=[],this.handlers=[],a.forEach(n=>{e.dev.assert(n.remoteName!==o,`Duplicate remoteName "${o}"`),n.remoteWindow===t&&e.dev.log("Warning: same remoteWindow is already targeted by a previous RemoteWindow instance")}),a.push(this),this.pingTimer=null,s.inIFrame()&&(this._postMessage({firstPing:!0}),this.pingTimer=setInterval(()=>{this._postMessage({ping:!0})},300)),this.timeoutTimer=null,r&&(this.timeoutTimer=setTimeout(()=>{const e=`Timeout: couldn't connect to "${o}" after ${r/1e3}s`;this._log(e),clearInterval(this.pingTimer),this.pingTimer=null,l&&l(e)},r))}destroy(){const t=a.length;a=a.filter(e=>e!==this),e.dev.assert(a.length!==t)}isConnected(){return this.connected}onConnected(t,o=!1){e.throwIf(this.onConnectedPriority,"There is already a priority onConnect handler"),o?(this.onConnectedPriority=!0,this.onConnectedHandlers.unshift(t)):this.onConnectedHandlers.push(t)}_log(...e){this.logger&&this.logger.log(...e)}postMessage(e,...t){const o={name:e,args:t};this.connected?this._postMessage(o):this.pending.push(o)}onMessage(e,t){(Array.isArray(e)?e:[e]).forEach(e=>this.handlers.push({name:e,cb:t}))}_postMessage(t){const o=Object.assign({},t,{from:e.getWindowName(),to:this.remoteName});this._log(`Sending message to ${this.remoteName} (${this.remoteOrigin}):`,e.omit(o,["from","to"]));try{this.remoteWindow.postMessage(o,this.remoteOrigin)}catch(e){throw this._log("Sending message failed. Possible cause: message is not a plain object."),e}}}addEventListener("message",t=>{const o=t.data,n=a.find(e=>e.remoteName===o.from);if(n&&o.to===e.getWindowName())if(n._log(`Received message from ${n.remoteName}:`,e.omit(o,["to","from"])),"*"===n.remoteOrigin||t.origin===n.remoteOrigin){if(clearTimeout(n.timeoutTimer),n.timeoutTimer=null,o.firstPing||o.ping)n._postMessage({stopPing:!0}),o.firstPing&&n.connected&&n.onConnectedHandlers.forEach(e=>e({firstConnect:!1}));else if(o.stopPing)clearInterval(n.pingTimer),n.pingTimer=null;else{const e=n.handlers.filter(e=>"*"===e.name||e.name===o.name);e.forEach(e=>e.cb(...o.args)),!e.length&&n._log("Unhandled message",o)}n.connected||(n.connected=!0,n.pending.forEach(e=>n._postMessage(e)),n.pending=null,n.onConnectedHandlers.forEach(e=>e({firstConnect:!0})))}else n._log(`Origin mismatch: "${t.origin}" doesn't match ${n.remoteOrigin})`)}),e.setWindowName("dcs-link-layout");const c=[],g=[],d=[],h=[];let m={topicId:null,tag:null,path:null};const u={connect:({discourseWindow:t,discourseOrigin:o,timeout:n})=>new Promise((s,i)=>{e.dev.assert(!r,"You already called connect()"),(r=new l({remoteName:"dcs-disc-plugin",remoteWindow:t,remoteOrigin:o,timeout:n,onTimeout:e=>i(e)})).onConnected(({firstConnect:e})=>{e?s():m.topicId?u.gotoTopic(m.topicId):m.tag?u.gotoTag(m.tag):m.path?u.gotoPath(m.path):u.gotoHome()}),r.onMessage("pageChange",e=>{if(e.triggeredByRW||e.justLoaded)return;const t=e.dcsTopic&&e.dcsTopic.id||null,o=t?e.dcsTopic.dcsTag:e.dcsTag||null;o?d.forEach(e=>e(o,t)):e.isHome?c.forEach(e=>e()):e.path&&g.forEach(t=>t(e.path))}),r.onMessage("redirect",t=>{e.dev.assert(t),location.href=t}),r.onMessage("userChange",e=>{h.forEach(t=>t(e))})}),gotoHome(){e.dev.assert(r,"Call connect() first"),r.postMessage("gotoHome"),m={topicId:null,tag:null,path:null}},gotoTopic(t){e.dev.assert(r,"Call connect() first"),r.postMessage("gotoTopic",t),m={topicId:t,tag:null,path:null}},gotoTag(t){e.dev.assert(r,"Call connect() first"),e.dev.assert(t.startsWith("dcs-"),'Tag must begins with "dcs-"'),e.dev.assert(t.length<=20,"Tag length must be <= 20"),e.dev.assert(t===t.toLowerCase(),"Tag must be lower case"),r.postMessage("gotoTag",t),m={topicId:null,tag:t,path:null}},gotoPath(t){e.dev.assert(r,"Call connect() first"),r.postMessage("gotoPath",t),m={topicId:null,tag:null,path:t}},onHome(t){e.dev.assert(r,"Call connect() first"),c.push(t)},onPath(t){e.dev.assert(r,"Call connect() first"),g.push(t)},onTagOrTopic(t){e.dev.assert(r,"Call connect() first"),d.push(t)},onUserChange(t){e.dev.assert(r,"Call connect() first"),h.push(t)}};export{u as dcs};
